[{"/home/bianca/Documentos/front-end-inovaico/src/index.js":"1","/home/bianca/Documentos/front-end-inovaico/src/App.js":"2","/home/bianca/Documentos/front-end-inovaico/src/styles/global.js":"3","/home/bianca/Documentos/front-end-inovaico/src/routes/index.js":"4","/home/bianca/Documentos/front-end-inovaico/src/pages/Dashboard/index.js":"5","/home/bianca/Documentos/front-end-inovaico/src/services/api.js":"6","/home/bianca/Documentos/front-end-inovaico/src/pages/ListPatient/index.js":"7","/home/bianca/Documentos/front-end-inovaico/src/pages/NewPatient/index.js":"8","/home/bianca/Documentos/front-end-inovaico/src/pages/EditPatient/index.js":"9","/home/bianca/Documentos/front-end-inovaico/src/pages/NewAppointment/index.js":"10","/home/bianca/Documentos/front-end-inovaico/src/pages/ListAppointment/index.js":"11","/home/bianca/Documentos/front-end-inovaico/src/pages/EditAppointment/index.js":"12","/home/bianca/Documentos/front-end-inovaico/src/pages/components/navBar.js":"13","/home/bianca/Documentos/front-end-inovaico/src/pages/Login/index.js":"14","/home/bianca/Documentos/front-end-inovaico/src/pages/NewAppointmentNotes/index.js":"15","/home/bianca/Documentos/front-end-inovaico/src/pages/ListAppointmentNotes/index.js":"16","/home/bianca/Documentos/front-end-inovaico/src/pages/EditAppointmentNotes/index.js":"17"},{"size":196,"mtime":1609606130256,"results":"18","hashOfConfig":"19"},{"size":195,"mtime":1609626350143,"results":"20","hashOfConfig":"19"},{"size":457,"mtime":1609635465078,"results":"21","hashOfConfig":"19"},{"size":1543,"mtime":1631046825546,"results":"22","hashOfConfig":"19"},{"size":1957,"mtime":1631046854155,"results":"23","hashOfConfig":"19"},{"size":116,"mtime":1630942455441,"results":"24","hashOfConfig":"19"},{"size":2850,"mtime":1631041239583,"results":"25","hashOfConfig":"19"},{"size":5541,"mtime":1630992624595,"results":"26","hashOfConfig":"19"},{"size":6477,"mtime":1630991962985,"results":"27","hashOfConfig":"19"},{"size":2060,"mtime":1630991963041,"results":"28","hashOfConfig":"19"},{"size":2513,"mtime":1631045307325,"results":"29","hashOfConfig":"19"},{"size":2834,"mtime":1631048819598,"results":"30","hashOfConfig":"19"},{"size":252,"mtime":1631032378025,"results":"31","hashOfConfig":"19"},{"size":2779,"mtime":1631033522496,"results":"32","hashOfConfig":"19"},{"size":6287,"mtime":1631048764340,"results":"33","hashOfConfig":"19"},{"size":2771,"mtime":1631048604540,"results":"34","hashOfConfig":"19"},{"size":6685,"mtime":1631048536645,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"d05egg",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/bianca/Documentos/front-end-inovaico/src/index.js",[],["75","76"],"/home/bianca/Documentos/front-end-inovaico/src/App.js",[],"/home/bianca/Documentos/front-end-inovaico/src/styles/global.js",[],"/home/bianca/Documentos/front-end-inovaico/src/routes/index.js",[],"/home/bianca/Documentos/front-end-inovaico/src/pages/Dashboard/index.js",[],"/home/bianca/Documentos/front-end-inovaico/src/services/api.js",[],"/home/bianca/Documentos/front-end-inovaico/src/pages/ListPatient/index.js",["77"],"import React, { useEffect, useState } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport api from '../../services/api';\nimport {Link} from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport Nav from \"../components/navBar\";\n\nconst ListAllPatients = () => {\n    const [allPatient, setPatient] = useState([]);\n\n    useEffect(() => {\n        handleAllPatients();\n    }, []);\n\n    async function handleAllPatients() {\n        const response = await api.get(`/patients`);\n        setPatient(response.data);\n    }\n\n    async function handleDeletePatients(e, id) {\n        e.preventDefault();\n       await api.delete(`/patients/${id}`).then((response) => {\n           swal('Deletado com sucesso!', '', 'success');\n       }).catch((error) => {\n           swal('Oops!',`Não foi possível listar os pacientes!`, 'error');\n       });\n        window.location.reload();\n    }\n\n    return (\n        <>\n            <Nav/>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <table className=\"table table-sm\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Nome</th>\n                                <th scope=\"col\">Email</th>\n                                <th scope=\"col\">Telefone</th>\n                                <th scope=\"col\">Gênero</th>\n                                <th scope=\"col\">Peso/Altura</th>\n                                <th scope=\"col\">Ações</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {allPatient.map((patient,i) => (\n                                <tr>\n                                    <td key={patient.id}>{patient.name}</td>\n                                    <td>{patient.email}</td>\n                                    <td>{patient.phone}</td>\n                                    <td>{patient.gender}</td>\n                                    <td>{patient.weight} kg - {patient.height} cm</td>\n                                    <td>\n                                        <Link to={`/editar-paciente/${patient.id}`} title='Editar'><span className=\"material-icons\">edit</span></Link>\n                                        <Link to={`/novo-atendimento/${patient.id}`} title='Novo atendimento'><span className=\"material-icons\">book_online</span></Link>\n                                        <a href=\"#\" onClick={(e) => handleDeletePatients(e, patient.id)} title='Deletar'><span className=\"material-icons\">delete</span></a>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ListAllPatients;\n","/home/bianca/Documentos/front-end-inovaico/src/pages/NewPatient/index.js",[],"/home/bianca/Documentos/front-end-inovaico/src/pages/EditPatient/index.js",["78"],"import React, { useEffect, useState } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport api from '../../services/api';\nimport swal from \"sweetalert\";\nimport Nav from \"../components/navBar\";\n\nconst EditPatient = () => {\n    let id = document.location.pathname.replace('/editar-paciente/', '');\n\n    useEffect(() => {\n        handleFindByIdPatient(id);\n    }, []);\n\n    let initialFormState = { name: '', email: '', phone: '', birthday: '', gender: '', height: '', weight: '' };\n\n    const [ form, setForm ] = useState(initialFormState);\n\n    const setInput = (newValue) => {\n        setForm(form => ({ ...form , ...newValue}))\n    }\n\n    async function handleFindByIdPatient(id) {\n        const response = await api.get(`/patients/${id}`);\n        const { name,  phone,  email,  birthday,  gender,  height, weight } = response.data;\n        initialFormState = { name, email, phone, birthday, gender, height, weight };\n        document.querySelector('[name=name]').value = name || '--';\n        document.querySelector('[name=email]').value = email || '--';\n        document.querySelector('[name=phone]').value = phone || '--';\n        document.querySelector('[name=birthday]').value = birthday || '--';\n        document.querySelector('[name=gender]').value = gender || '--';\n        document.querySelector('[name=height]').value = height || '--';\n        document.querySelector('[name=weight]').value = weight || '--';\n\n        setForm(form => ({ ...form , ...initialFormState}))\n    }\n\n    async function handleUpdatePatient(e, id) {\n        e.preventDefault();\n        await api.put(`/patients/${id}`, { ...form }).then((response) => {\n            swal('Atualizado com sucesso!', '', 'success');\n        }).catch((error) => {\n            swal('Oops!',`Não foi possível atualizar o paciente!`, 'error');\n        });\n        window.location.reload();\n    }\n\n    return (\n        <>\n            <Nav/>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <form>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-6\">\n                                <label htmlFor=\"name\">Nome</label>\n                                <input\n                                    name=\"name\"\n                                    onChange={e => setInput({ name: e.target.value })}\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"name\"\n                                    placeholder=\"Insira o nome completo\"/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label htmlFor=\"inputEmail4\">Email</label>\n                                <input\n                                    name=\"email\"\n                                    onChange={e => setInput({ email: e.target.value })}\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    id=\"inputEmail4\"\n                                    placeholder=\"Email\"/>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"phone\">Telefone</label>\n                            <input\n                                name=\"phone\"\n                                onChange={e => setInput({ phone: e.target.value })}\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"phone\"\n                                placeholder=\"Insira o telefone\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"birthday\">Aniversário</label>\n                            <input\n                                name=\"birthday\"\n                                onChange={e => setInput({ birthday: e.target.value })}\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"birthday\"\n                                placeholder=\"Insira o aniversário\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"gender\">Gênero</label>\n                            <input\n                                name=\"gender\"\n                                onChange={e => setInput({ gender: e.target.value })}\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"gender\"\n                                placeholder=\"Insira o gênero\"/>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-6\">\n                                <label htmlFor=\"height\">Altura</label>\n                                <input\n                                    name=\"height\"\n                                    onChange={e => setInput({ height: e.target.value })}\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"height\"\n                                    placeholder=\"Insira a altura\"/>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"weight\">Peso</label>\n                                <input\n                                    name=\"weight\"\n                                    onChange={e => setInput({ weight: e.target.value })}\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"weight\"\n                                    placeholder=\"Insira o peso\"/>\n                            </div>\n                        </div>\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary\"\n                            onClick={(e) => handleUpdatePatient(e, id)}>\n                            Atualizar\n                        </button>\n                    </form>\n                </div>\n            </div>\n    </>\n    )\n}\n\nexport default EditPatient;\n","/home/bianca/Documentos/front-end-inovaico/src/pages/NewAppointment/index.js",[],"/home/bianca/Documentos/front-end-inovaico/src/pages/ListAppointment/index.js",["79"],"import React, { useEffect, useState } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport api from '../../services/api';\nimport {Link} from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport { parseISO, format } from 'date-fns';\nimport Nav from \"../components/navBar\";\n\nconst ListAppointment = () => {\n    const [allAppointment, setAppointment] = useState([]);\n\n    useEffect(() => {\n        handleAllAppointments();\n    }, []);\n\n    async function handleAllAppointments() {\n        const response = await api.get(`/appointments`);\n        setAppointment(response.data);\n    }\n\n    async function handleDeleteAppointments(id) {\n       await api.delete(`/appointments/${id}`).then((response) => {\n           swal('Deletado com sucesso!', '', 'success');\n       }).catch((error) => {\n           swal('Oops!',`Não foi possível deletar o agendamento!`, 'error');\n       });\n        window.location.reload();\n    }\n\n    return (\n        <>\n        <Nav/>\n        <div className=\"container\">\n            <div className=\"row\">\n                <table className=\"table table-sm\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Paciente</th>\n                            <th scope=\"col\">Data da consulta</th>\n                            <th scope=\"col\">Ações</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {allAppointment.map((appointment,i) => (\n                            <tr>\n                                <td key={appointment.id}>{appointment.patient_id.name}</td>\n                                <td>{format(parseISO(appointment.consultation_date), 'dd-MM-yyyy \\'às\\' HH:mm:ss')}</td>\n                                <td>\n                                    <Link to={`/novo-acompanhamento/${appointment.id}`} title='Novo acompanhamento'><span className=\"material-icons\">post_add</span></Link>\n                                    <Link to={`/editar-atendimento/${appointment.id}`} title='Editar'><span className=\"material-icons\">edit</span></Link>\n                                    <a href=\"#\" onClick={() => handleDeleteAppointments(appointment.id)} title='Deletar'><span className=\"material-icons\">delete</span></a>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </>\n    )\n}\n\nexport default ListAppointment;\n","/home/bianca/Documentos/front-end-inovaico/src/pages/EditAppointment/index.js",["80"],"/home/bianca/Documentos/front-end-inovaico/src/pages/components/navBar.js",[],"/home/bianca/Documentos/front-end-inovaico/src/pages/Login/index.js",["81","82"],"import React, {useState} from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport api from \"../../services/api\";\nimport swal from \"sweetalert\";\nimport {Link, Redirect} from \"react-router-dom\";\n\nconst Login = () => {\n\n    const initialFormState = {\n        email: \"\",\n        password: \"\"\n    }\n\n    const [ form, setForm ] = useState(initialFormState);\n\n    const setInput = (newValue) => {\n        setForm(form => ({ ...form , ...newValue}))\n    }\n\n    async function handleLogin(e) {\n        e.preventDefault();\n        await api.post(`/sessions`, { ...form }).then((response) => {\n            return window.location.pathname = '/dashboard';\n        }).catch((error) => {\n            swal(\n                'Oops!',\n                `Não foi possível fazer o login!`,\n                'error'\n            );\n        });\n    }\n    return (\n      <>\n          <div className=\"container d-flex justify-content-center\">\n              <div className=\"row center-cols center-align\">\n                  <form>\n                      <div className=\"form-group row\">\n                          <label htmlFor=\"inputEmail3\" className=\"col-sm-2 col-form-label\">Email</label>\n                          <div className=\"col-sm-10\">\n                              <input\n                                  name=\"email\"\n                                  onChange={e => setInput({ email: e.target.value })}\n                                  type=\"email\"\n                                  className=\"form-control\"\n                                  id=\"email\"\n                                  placeholder=\"Email\"/>\n                          </div>\n                      </div>\n                      <div className=\"form-group row\">\n                          <label htmlFor=\"inputPassword3\" className=\"col-sm-2 col-form-label\">Password</label>\n                          <div className=\"col-sm-10\">\n                              <input\n                                  name=\"password\"\n                                  onChange={e => setInput({ password: e.target.value })}\n                                  type=\"password\"\n                                  className=\"form-control\"\n                                  id=\"password\"\n                                  placeholder=\"Senha\"/>\n                          </div>\n                      </div>\n                      <div className=\"form-group row\">\n                          <div className=\"col-sm-10\">\n                              <button type=\"submit\" className=\"btn btn-primary\" onClick={handleLogin}>Entrar<i className=\"material-icons\">login</i></button>\n                          </div>\n                      </div>\n                  </form>\n              </div>\n          </div>\n      </>\n  );\n};\n\nexport default Login;\n","/home/bianca/Documentos/front-end-inovaico/src/pages/NewAppointmentNotes/index.js",["83"],"/home/bianca/Documentos/front-end-inovaico/src/pages/ListAppointmentNotes/index.js",["84"],"/home/bianca/Documentos/front-end-inovaico/src/pages/EditAppointmentNotes/index.js",["85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":57,"column":41,"nodeType":"92","endLine":57,"endColumn":122},{"ruleId":"93","severity":1,"message":"94","line":12,"column":8,"nodeType":"95","endLine":12,"endColumn":10,"suggestions":"96"},{"ruleId":"90","severity":1,"message":"91","line":51,"column":37,"nodeType":"92","endLine":51,"endColumn":122},{"ruleId":"93","severity":1,"message":"97","line":18,"column":8,"nodeType":"95","endLine":18,"endColumn":10,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":5,"column":9,"nodeType":"101","messageId":"102","endLine":5,"endColumn":13},{"ruleId":"99","severity":1,"message":"103","line":5,"column":15,"nodeType":"101","messageId":"102","endLine":5,"endColumn":23},{"ruleId":"93","severity":1,"message":"104","line":12,"column":8,"nodeType":"95","endLine":12,"endColumn":10,"suggestions":"105"},{"ruleId":"90","severity":1,"message":"91","line":53,"column":37,"nodeType":"92","endLine":53,"endColumn":132},{"ruleId":"93","severity":1,"message":"106","line":11,"column":8,"nodeType":"95","endLine":11,"endColumn":10,"suggestions":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleFindByIdPatient' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has missing dependencies: 'handleFindByIdAppointment' and 'id'. Either include them or remove the dependency array.",["111"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'appointmentId' and 'getFindByAppointment'. Either include them or remove the dependency array.",["112"],"React Hook useEffect has missing dependencies: 'getFindByAppointmentNotes' and 'id'. Either include them or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [handleFindByIdPatient, id]",{"range":"122","text":"123"},"Update the dependencies array to be: [handleFindByIdAppointment, id]",{"range":"124","text":"125"},"Update the dependencies array to be: [appointmentId, getFindByAppointment]",{"range":"126","text":"127"},"Update the dependencies array to be: [getFindByAppointmentNotes, id]",{"range":"128","text":"129"},[384,386],"[handleFindByIdPatient, id]",[602,604],"[handleFindByIdAppointment, id]",[417,419],"[appointmentId, getFindByAppointment]",[372,374],"[getFindByAppointmentNotes, id]"]